// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using classProject.Data;

#nullable disable

namespace classProject.Migrations
{
    [DbContext(typeof(ClassProjectContext))]
    [Migration("20220328073134_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("classProject.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentAuthor")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentBody")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("likes")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            CommentAuthor = "Jonas",
                            CommentBody = "Amazing post",
                            CommentDate = new DateTime(2022, 3, 28, 9, 31, 34, 446, DateTimeKind.Local).AddTicks(2160),
                            PostId = 1,
                            likes = 0
                        },
                        new
                        {
                            CommentId = 2,
                            CommentAuthor = "Jonas",
                            CommentBody = "Amazing post",
                            CommentDate = new DateTime(2022, 3, 28, 9, 31, 34, 446, DateTimeKind.Local).AddTicks(2170),
                            PostId = 2,
                            likes = 0
                        },
                        new
                        {
                            CommentId = 3,
                            CommentAuthor = "Jonas",
                            CommentBody = "Amazing post",
                            CommentDate = new DateTime(2022, 3, 28, 9, 31, 34, 446, DateTimeKind.Local).AddTicks(2180),
                            PostId = 3,
                            likes = 0
                        });
                });

            modelBuilder.Entity("classProject.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("PostId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Author = "Jonas Kunert",
                            Body = "Post 1 bla bla bla",
                            CreationDate = new DateTime(2022, 3, 28, 9, 31, 34, 446, DateTimeKind.Local).AddTicks(2070),
                            Status = 1,
                            Title = "Post no 1"
                        },
                        new
                        {
                            PostId = 2,
                            Author = "Jonas Kunert",
                            Body = "Post 2 bla bla bla",
                            CreationDate = new DateTime(2022, 3, 28, 9, 31, 34, 446, DateTimeKind.Local).AddTicks(2100),
                            Status = 1,
                            Title = "Post no 2"
                        },
                        new
                        {
                            PostId = 3,
                            Author = "Jonas Kunert",
                            Body = "Post 3 bla bla bla",
                            CreationDate = new DateTime(2022, 3, 28, 9, 31, 34, 446, DateTimeKind.Local).AddTicks(2110),
                            Status = 1,
                            Title = "Post no 3"
                        });
                });

            modelBuilder.Entity("classProject.Models.Comment", b =>
                {
                    b.HasOne("classProject.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("classProject.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
